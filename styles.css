body {
  text-align: center;
  background-color: #011F3F;
}

#level-title {
  font-family: 'Press Start 2P', cursive;
  font-size: 3rem;
  margin: 5%;
  color: #FEF2BF;
}

.container {
  display: block;
  width: 50%;
  margin: auto;
}

.hint-button {
  text-align: center;
  outline: 1px solid #036cdb !important;
  box-shadow: 0 0 1rem rgba(0, 0, 0, .6);
}

.btn {
  margin: 5px;
  display: inline-block;
  height: 120px;
  width: 120px;
  border: 10px solid black;
  border-radius: 20%;
}

.game-over {
  background-color: red;
  opacity: 0.8;
}

.red {
  background-color: red;
  margin-right: 75px;
  border-radius: 20%;
}

.green {
  background-color: green;
}

.blue {
  background-color: blue;
}

.yellow {
  background-color: yellow;
  margin-left: 75px;
  border-radius: 20%;
}

.pressed {
  box-shadow: 0 0 20px white;
  background-color: grey;
}

.vishal {
  color: pink;
}

/* //3. create a new array  called buttonColours & give color names...
var buttonColours = ["red", "blue", "green", "yellow"]

//5. add a empty array to a new variable called gamePattern...
var gamePattern = [];

// //..3-4. At the top of the game.js file, create a new empty array with the name userClickedPattern.
var userClickedPattern = [];

//1. create a new Function & name nextSequence
function nextSequence() {

  //2. inside function, generate a random number inside variable randomNumber...
  var randomNumber = Math.floor(Math.random() * 4);

  //4. create new variable called randomChosenColour with help of randomNumber & butttonColours...
  var randomChosenColour = buttonColours[randomNumber];

  //6. joint randomChosenColour with gamePattern to stick color to each button...
  gamePattern.push(randomChosenColour);

  //.7. Use jQuery to select the button with the same id as the randomChosenColour
  //.8. Use Google/Stackoverflow to figure out how you can use jQuery to animate a flash to the button selected in step 1.
  $("#"+randomChosenColour).fadeOut(100).fadeIn(100).fadeOut(100).fadeIn(100);

  //.9. Use Google/Stackoverflow to figure out how you can use Javascript to play the sound for the button colour selected in step 1.
  var audio = new Audio('sounds/'+randomChosenColour+".mp3");
audio.play();

}




//..1-4. Use jQuery to detect when any of the buttons are clicked and trigger a handler function.
$(".btn").on("click", function (event) {

  // ..2-4. Inside the handler, create a new variable called userChosenColour to store the id of the button that got clicked.
  var userChosenColour = (event.target.id);
  // var userChosenColour = $(this).attr("id");

  //..4-4. Add the contents of the variable userChosenColour created in step 2 to the end of this new userClickedPattern
  userClickedPattern.push(userChosenColour);


}); */
